<persistence xmlns="http://java.sun.com/xml/ns/persistence"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
   version="1.0">
   
<persistence-unit name="jpademo">
    <!-- 
    *** N.B. Both Hibernate and EclipseLink are here; one must be
    *** commented out, and the one that isn't, must be moved ahead of 
    *** the other in pom.xml as well, and "Maven->Update Project" run! 
    -->
	<!--
	<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
	-->
	<provider>org.hibernate.ejb.HibernatePersistence</provider>

	<exclude-unlisted-classes>false</exclude-unlisted-classes>

	<properties>


	<!-- Properties for eclipselink -->
	<!-- 
	<property name="eclipselink.jdbc.driver" value="org.hsqldb.jdbcDriver"/>
	<property name="eclipselink.jdbc.url" value="jdbc:hsqldb:/tmp/jpademo.db"/>
	<property name="eclipselink.jdbc.user" value="sa"/>
	<property name="eclipselink.jdbc.password" value=""/>
	<property name="eclipselink.target-database"
	      value="org.eclipse.persistence.platform.database.HSQLPlatform"/>
	<property name="eclipselink.logging.level" value="OFF"/>
	<property name="eclipselink.orm.throw.exceptions" value="true"/>
	<property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>
	<property name="eclipselink.ddl-generation.output-mode" value="database"/>
	 -->

<!-- 	<class>rain.Duration</class>  -->
		<property name="eclipselink.logging.level" value="INFO" />
		<property name="eclipselink.target-database" value="MySQL"/>
		<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
		<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
		<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/jpademo.db"/>
		<property name="javax.persistence.jdbc.user" value="student" />
		<property name="javax.persistence.jdbc.password" value="student" />
	
	<!-- These cause EclipseLink to save the generated DDL statements for examination -->
	<!--
	<property name="eclipselink.application-location" value="/tmp"/>
	<property name="eclipselink.create-ddl-jdbc-file-name" value="create_statements.sql"/>
	<property name="eclipselink.drop-ddl-jdbc-file-name" value="drop_statements.sql"/>
	<property name="eclipselink.ddl-generation.output-mode" value="both"/>
	-->
	
	<!-- This causes EclipseLink to run the Hibernate-style import.sql after table creation. -->
<!-- 	
	<property name="javax.persistence.sql-load-script-source" 
	    value="file:///Users/ian/workspace/jpademo/src/main/resources/import.sql"/>
 -->	    
	<!-- These are for use with the kludgy import mechanism for older EclipseLink -->
	<!--
	<property name="eclipselink.session.customizer" value="eclipselink.ImportSQL"/>
	<property name="import.sql.file" value="/import.sql"/>
	<property name="import.sql.trace" value="true"/>
	-->

	<!-- Properties for Hibernate -->
<!-- 	
	<property name="hibernate.hbm2ddl.auto" value="create-drop"/>
	<property name="hibernate.show_sql" value="true"/>
	<property name="hibernate.format_sql" value="false"/>
	<property name="hibernate.archive.autodetection" value="class"/>
	<property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver"/>
	<property name="hibernate.connection.url" value="jdbc:hsqldb:/tmp/jpademo.db"/>
	<property name="hibernate.connection.username" value="sa"/>
	<property name="hibernate.connection.password" value=""/>
	<property name="hibernate.transaction.factory.class" value="org.hibernate.transaction.JTATransactionFactory"/>
	<property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>
 -->
	</properties>
</persistence-unit>
</persistence>
